const centerX = canvas.width / 2;
const centerY = canvas.height / 2;
const wavelength = 50; // wavelength of the wave
const distance = 150; // distance between the two point sources
const frequency = 0.01; // frequency of the wave
const amplitude = 30; // amplitude of the wave
const speed = 1; // speed of the wave

function draw() {
  stage.removeAllChildren();
  const g = new createjs.Graphics();

  // draw the two point sources
  g.beginFill('red').drawCircle(centerX - distance / 2, centerY, 5);
  g.beginFill('blue').drawCircle(centerX + distance / 2, centerY, 5);

  // loop through each pixel and calculate the intensity of the wave
  for (let x = 0; x < canvas.width; x++) {
    for (let y = 0; y < canvas.height; y++) {
      const distance1 = Math.sqrt(Math.pow(x - (centerX - distance / 2), 2) + Math.pow(y - centerY, 2));
      const distance2 = Math.sqrt(Math.pow(x - (centerX + distance / 2), 2) + Math.pow(y - centerY, 2));
      const phase1 = 2 * Math.PI * (distance1 / wavelength) - 2 * Math.PI * frequency * createjs.Ticker.getTime() * speed;
      const phase2 = 2 * Math.PI * (distance2 / wavelength) - 2 * Math.PI * frequency * createjs.Ticker.getTime() * speed;
      const intensity1 = amplitude * Math.cos(phase1);
      const intensity2 = amplitude * Math.cos(phase2);
      const interference = intensity1 + intensity2;
      const color = interference > 0 ? `rgb(${interference},0,0)` : `rgb(0,0,${-interference})`;
      g.beginFill(color).drawRect(x, y, 1, 1);
    }
  }

  const bg = new createjs.Shape(g);
  bg.cache(0, 0, canvas.width, canvas.height);
  stage.addChild(bg);
  stage.update();
}

createjs.Ticker.framerate = 60;
createjs.Ticker.addEventListener('tick', draw);
